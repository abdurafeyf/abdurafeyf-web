---
import HeaderLink from "./HeaderLink.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../config";
---

<header class="hdr" role="banner">
  <div class="brand">
    <a href="/" class="brand-link" aria-label={SITE_TITLE}>
      <div class="title">{SITE_TITLE}</div>
      <div class="subtitle">{SITE_DESCRIPTION}</div>
    </a>
  </div>

  <nav class="nav" role="navigation" aria-label="Main">
    <HeaderLink href="/" class="nav-item">home</HeaderLink>
    <HeaderLink href="/posts" class="nav-item">posts</HeaderLink>
  </nav>

  <div class="controls">
    <button
      id="music-toggle"
      class="music-btn"
      type="button"
      aria-haspopup="true"
      aria-expanded="false"
      aria-controls="music-popover"
    >
      <svg viewBox="0 0 24 24" class="music-icon" aria-hidden="true"
        ><path fill="currentColor" d="M3 22v-20l18 10-18 10z"></path></svg
      >
      <span class="sr">Open music</span>
    </button>

    <a href="/about" class="avatar" aria-label="Profile"></a>
  </div>
</header>

<!-- Popover (small, anchored under the music button) -->
<div
  id="music-popover"
  class="popover hidden"
  role="dialog"
  aria-modal="false"
  aria-hidden="true"
>
  <div class="popover-card">
    <div class="popover-head">
      <strong>Now playing</strong>
      <button id="close-popover" class="close-pop" aria-label="Close">âœ•</button>
    </div>

    <iframe
      src="https://open.spotify.com/embed/track/4iV5W9uYEdYUVa79Axb7Rh?utm_source=generator&theme=0"
      width="320"
      height="90"
      frameborder="0"
      allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture"
      loading="lazy"
      title="Spotify player"></iframe>
  </div>
</div>

<style>
  :root {
    --accent: #1db954;
    --muted: #6b7280;
    --glass: rgba(255, 255, 255, 0.75);
  }

  /* tiny utility */
  .hidden {
    display: none !important;
  }
  .sr {
    position: absolute !important;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0 0 0 0);
    white-space: nowrap;
    border: 0;
  }

  /* header layout */
  .hdr {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 16px;
    padding: 10px 18px;
    border-bottom: 1px solid rgba(15, 15, 15, 0.04);
    background: linear-gradient(
      180deg,
      rgba(255, 255, 255, 0.7),
      rgba(255, 255, 255, 0.9)
    );
    backdrop-filter: blur(6px);
  }

  .brand-link {
    text-decoration: none;
    color: inherit;
    display: flex;
    flex-direction: column;
    gap: 2px;
  }
  .title {
    font-weight: 700;
    font-size: 1rem;
    color: #111827;
    line-height: 1;
  }
  .subtitle {
    font-size: 0.78rem;
    color: var(--muted);
  }

  /* nav */
  .nav {
    display: flex;
    gap: 12px;
    align-items: center;
  }
  .nav-item {
    padding: 6px 10px;
    border-radius: 8px;
    color: var(--muted);
    font-weight: 600;
    text-decoration: none;
    transition:
      background 0.12s,
      color 0.12s;
  }
  .nav-item:hover,
  .nav-item:focus {
    background: rgba(0, 0, 0, 0.04);
    color: #111827;
    outline: none;
  }

  /* controls */
  .controls {
    display: flex;
    align-items: center;
    gap: 12px;
  }

  /* music button - small pill */
  .music-btn {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 6px 10px;
    border-radius: 999px;
    border: 1px solid rgba(0, 0, 0, 0.06);
    background: #fff;
    cursor: pointer;
    font-weight: 700;
    transition:
      transform 0.12s ease,
      box-shadow 0.12s ease,
      background 0.12s;
    color: #111827;
  }
  .music-btn:focus {
    outline: none;
    box-shadow: 0 0 0 6px rgba(29, 185, 84, 0.06);
    transform: translateY(-1px);
  }
  .music-btn:hover {
    transform: translateY(-2px);
    background: var(--glass);
  }

  .music-icon {
    width: 14px;
    height: 14px;
    color: var(--accent);
    display: block;
  }

  /* avatar - use your profile pic, unchanged */
  .avatar {
    width: 42px;
    height: 42px;
    border-radius: 50%;
    background-image: url("/standing-profile.jpg");
    background-size: cover;
    background-position: center;
    display: inline-block;
    border: 2px solid transparent;
    transition:
      transform 0.12s,
      box-shadow 0.12s;
  }
  .avatar:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 24px rgba(2, 6, 23, 0.08);
  }

  /* popover - anchored and minimal */
  .popover {
    position: absolute;
    z-index: 1200;
    top: calc(100% + 8px); /* will be positioned by JS next to button */
    right: 18px; /* fallback position */
    width: max-content;
    max-width: calc(100vw - 32px);
    display: flex;
    justify-content: center;
  }

  .popover-card {
    width: 340px;
    background: white;
    border-radius: 10px;
    box-shadow: 0 18px 50px rgba(2, 6, 23, 0.14);
    padding: 10px 12px;
    border: 1px solid rgba(0, 0, 0, 0.05);
  }

  .popover-head {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 8px;
    gap: 8px;
  }
  .close-pop {
    background: transparent;
    border: none;
    cursor: pointer;
    font-size: 14px;
    padding: 6px;
    border-radius: 6px;
  }
  .close-pop:hover {
    background: rgba(0, 0, 0, 0.04);
  }

  /* small screens: shrink iframe and popover width */
  @media (max-width: 420px) {
    .popover-card {
      width: calc(100vw - 28px);
    }
    .music-icon {
      width: 12px;
      height: 12px;
    }
  }
</style>

<script>
  (function () {
    function ready(fn) {
      if (document.readyState === "loading")
        document.addEventListener("DOMContentLoaded", fn);
      else fn();
    }

    ready(function () {
      const toggle = document.getElementById("music-toggle");
      const pop = document.getElementById("music-popover");
      const closeBtn = document.getElementById("close-popover");

      if (!toggle || !pop) return;

      // position popover near button (right-aligned by default)
      function positionPopover() {
        const rect = toggle.getBoundingClientRect();
        const popRect = pop.getBoundingClientRect();
        // prefer placing under button aligned to its right edge
        const top = rect.bottom + 8 + window.scrollY;
        let left = rect.right - popRect.width + window.scrollX;
        // clamp to viewport
        if (left < 8) left = 8;
        pop.style.top = top + "px";
        pop.style.left = left + "px";
      }

      function open() {
        pop.classList.remove("hidden");
        pop.classList.remove("invisible");
        pop.setAttribute("aria-hidden", "false");
        toggle.setAttribute("aria-expanded", "true");
        positionPopover();
        // small delay to ensure layout
        setTimeout(
          () => window.addEventListener("resize", positionPopover),
          60
        );
      }

      function close() {
        pop.classList.add("hidden");
        pop.setAttribute("aria-hidden", "true");
        toggle.setAttribute("aria-expanded", "false");
        window.removeEventListener("resize", positionPopover);
      }

      toggle.addEventListener("click", function (e) {
        e.stopPropagation();
        const openState = pop.classList.contains("hidden") === false;
        if (openState) close();
        else open();
      });

      if (closeBtn)
        closeBtn.addEventListener("click", function (e) {
          e.stopPropagation();
          close();
        });

      // close when clicking outside
      document.addEventListener("click", function (e) {
        if (!pop.contains(e.target) && !toggle.contains(e.target)) close();
      });

      // escape key
      document.addEventListener("keydown", function (e) {
        if (
          (e.key === "Escape" || e.key === "Esc") &&
          pop.classList.contains("hidden") === false
        )
          close();
      });
    });
  })();
</script>
